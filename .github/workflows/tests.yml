name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:  # Ручной запуск

jobs:
  unit-tests:
    name: Модульные тесты
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements.dev.txt
      
      - name: Run unit tests
        run: |
          pytest tests/unit/ -v --cov=app --cov-report=xml
      
      - name: Upload coverage report
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          fail_ci_if_error: false
  
  integration-tests:
    name: Интеграционные тесты
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      centrifugo:
        image: centrifugo/centrifugo:v3
        env:
          CENTRIFUGO_TOKEN_HMAC_SECRET_KEY: "test-secret-key-for-testing-only"
          CENTRIFUGO_API_KEY: "test-api-key-for-testing-only"
          CENTRIFUGO_ADMIN_PASSWORD: "test-admin-password"
          CENTRIFUGO_ADMIN_SECRET: "test-admin-secret"
          CENTRIFUGO_ALLOWED_ORIGINS: "*"
        ports:
          - 8001:8001
          - 8002:8002
        options: >-
          --entrypoint centrifugo
          --engine=memory
          --admin
          --allowed_origins=*
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements.dev.txt
      
      - name: Create .env file
        run: |
          echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/test_db" > .env
          echo "REDIS_URL=redis://localhost:6379/0" >> .env
          echo "CENTRIFUGO_URL=http://localhost:8001" >> .env
          echo "CENTRIFUGO_API_KEY=test-api-key-for-testing-only" >> .env
          echo "CENTRIFUGO_TOKEN_SECRET=test-secret-key-for-testing-only" >> .env
          echo "CENTRIFUGO_TOKEN_EXPIRE_SECONDS=3600" >> .env
          echo "SECRET_KEY=test-secret-key-for-jwt-token" >> .env
          echo "ALGORITHM=HS256" >> .env
          echo "ACCESS_TOKEN_EXPIRE_MINUTES=30" >> .env
      
      - name: Run migrations
        run: |
          alembic upgrade head
      
      - name: Create test data
        run: |
          python scripts/create_test_data.py --yes
      
      - name: Start API server
        run: |
          python -m uvicorn app.main:app --host 0.0.0.0 --port 8000 &
          sleep 5  # Ждем запуска сервера
      
      - name: Wait for services to be ready
        run: |
          attempts=0
          max_attempts=10
          until curl -s http://localhost:8001/health || [ $attempts -eq $max_attempts ]
          do
            echo "Waiting for Centrifugo... (attempt $attempts/$max_attempts)"
            attempts=$((attempts+1))
            sleep 5
          done
          if [ $attempts -eq $max_attempts ]; then
            echo "Centrifugo не запустился!"
            exit 1
          fi
      
      - name: Run integration tests
        run: |
          pytest tests/integration/ -v
      
      - name: Run Centrifugo integration test
        run: |
          python scripts/test_centrifugo_integration.py
  
  performance-tests:
    name: Тесты производительности
    runs-on: ubuntu-latest
    needs: [integration-tests]  # Запускаем после интеграционных тестов
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      centrifugo:
        image: centrifugo/centrifugo:v3
        env:
          CENTRIFUGO_TOKEN_HMAC_SECRET_KEY: "test-secret-key-for-testing-only"
          CENTRIFUGO_API_KEY: "test-api-key-for-testing-only"
          CENTRIFUGO_ADMIN_PASSWORD: "test-admin-password"
          CENTRIFUGO_ADMIN_SECRET: "test-admin-secret"
          CENTRIFUGO_ALLOWED_ORIGINS: "*"
        ports:
          - 8001:8001
        options: >-
          --entrypoint centrifugo
          --engine=memory
          --allowed_origins=*
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements.dev.txt
      
      - name: Create .env file
        run: |
          echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/test_db" > .env
          echo "REDIS_URL=redis://localhost:6379/0" >> .env
          echo "CENTRIFUGO_URL=http://localhost:8001" >> .env
          echo "CENTRIFUGO_API_KEY=test-api-key-for-testing-only" >> .env
          echo "CENTRIFUGO_TOKEN_SECRET=test-secret-key-for-testing-only" >> .env
          echo "CENTRIFUGO_TOKEN_EXPIRE_SECONDS=3600" >> .env
          echo "SECRET_KEY=test-secret-key-for-jwt-token" >> .env
          echo "ALGORITHM=HS256" >> .env
          echo "ACCESS_TOKEN_EXPIRE_MINUTES=30" >> .env
      
      - name: Run migrations
        run: |
          alembic upgrade head
      
      - name: Create test data
        run: |
          python scripts/create_test_data.py --yes
      
      - name: Start API server
        run: |
          python -m uvicorn app.main:app --host 0.0.0.0 --port 8000 &
          sleep 5  # Ждем запуска сервера
      
      - name: Wait for services to be ready
        run: |
          attempts=0
          max_attempts=10
          until curl -s http://localhost:8001/health || [ $attempts -eq $max_attempts ]
          do
            echo "Waiting for Centrifugo... (attempt $attempts/$max_attempts)"
            attempts=$((attempts+1))
            sleep 5
          done
          if [ $attempts -eq $max_attempts ]; then
            echo "Centrifugo не запустился!"
            exit 1
          fi
      
      - name: Run performance tests
        run: |
          pytest tests/performance/ -v
      
      - name: Run performance monitoring
        run: |
          python scripts/monitor_centrifugo.py --duration 30 --output performance_metrics.json
      
      - name: Upload performance results
        uses: actions/upload-artifact@v2
        with:
          name: performance-results
          path: |
            performance_metrics.json
            centrifugo_stats.json
            load_test_*.json 